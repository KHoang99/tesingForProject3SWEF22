////////////////////
////// TASK 1 //////
////////////////////
// Establish connection between the user's Discord and Steam accounts.

// By this point, we can assume there is sufficient code to link the user's Discord and Steam accounts.
// Previous requirements will have taken care of this task.

////////////////////
////// TASK 2 //////
////////////////////
// Implement a verification system that checks if a gaming application was closed.

// We can assume that the application now has access to the user's Discord account and what game they are currently playing.
// To check if a gaming application in the user's steam library was closed, the plugin will run a method like this:

function checkGameClose() {
   if (currentGame == closed) {
      for (length of user's steam library) {
         if (currentGame = libraryGame)
            return ratingPrompt();
      }
      break;
   }
   return 0;
}

// The above pseudocode displays how the method might be structured.
// It would first need to check that an application on the user's device was closed.
// Once it completes that check, it will move on to check if the recently closed application was a gaming application available in the user's Steam library.
// Assuming we have access, we can scan through the user's library and check if the user owns that game,
// If that check completes, it will transition to the function to display the popup that asks the user to rate the game session.
// If any check fails, the function loop will break and return nothing.

// This method is integral to the program because it is the starting point for the entire requirement (minus the check for linked accounts).
// If the program cannot detect when a gaming application has been closed, then it cannot run the function to ask the user for a rating.
// Once this check completes successfully, the rest of the program can run.

////////////////////
////// TASK 3 //////
////////////////////
// Develop a basic 5-star rating system that accepts user input in the form of mouse clicks.

// After completing the application check, the program transitions into the "ratingPrompt()" function.
// This task will have a very similar implementation to Discord's call rating system:

// https://preview.redd.it/jztlo58bwy351.png?auto=webp&s=b8c27ea98612fbe1ab7cccf30f20ba57e847a4e4

// This will instead use a 5-star rating system, instead of the 3 faces.

////////////////////
////// TASK 4 //////
////////////////////
// Create a data structure to hold the user ratings for each individual game.

////////////////////
////// TASK 5 //////
////////////////////
// Convert user ratings into integer values that can be stored in a data structure.

////////////////////
////// TASK 6 //////
////////////////////
// Implement a setting to disable the rating popup.
